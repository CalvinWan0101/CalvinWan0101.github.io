<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on CALVIN BLOG</title>
    <link>https://calvinwan0101.github.io/cn/blog/</link>
    <description>Recent content in Blog on CALVIN BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <lastBuildDate>Sun, 28 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://calvinwan0101.github.io/cn/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数独（使用C&#43;&#43;)</title>
      <link>https://calvinwan0101.github.io/cn/blog/sudoku/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://calvinwan0101.github.io/cn/blog/sudoku/</guid>
      <description>数独C++想法 有一天我去看了上清大资工同学的备审
奖项跟参赛记录多到哭出来啊，是完全无法触及的级别
但是他有提到他有用Excel写一个2*2的数独
刚好我最近在读关于dfs的东西，想说不然来玩玩看
逻辑应该差不多，就是比较不那麽暴力的穷举
正式开始 先建立一个全域的int阵列当做map
int map[9][9]
然后建立一个用来检测输入的数字是否符合条件的函数
条件如下:
   范围 条件A 条件B     x相同的9个格子 格子内的数字互不相等 数字为1~9   y相同的9个格子 格子内的数字互不相等 数字为1~9   划分在同一个小格子的9个格子 格子内的数字互不相等 数字为1~9    这边的count是跑到第count格的意思
从第1格开始跑，到第(9*9)格结束
先计算当前count值下的坐标
int y = count / 9; int x = count % 9; 检查y相同的状况，
for (int i = 0; i &amp;lt; 9; ++i) //当發现y相同时有点的值和代入的值相同时就return false  if (map[y][i] == map[y][x] &amp;amp;&amp;amp; i !</description>
    </item>
    
    <item>
      <title>关于APCS的抱怨</title>
      <link>https://calvinwan0101.github.io/cn/blog/apcs/</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://calvinwan0101.github.io/cn/blog/apcs/</guid>
      <description>APCS(大学程式设计先修检定) 在APCS的观念题中有一种很麻烦的题目是 code tracing
一开始想说应该还好，毕竟也不是没有看过别人的程式码，应该跟着跑一次就好了
天真如我
一时找不到之前绕到头晕掉的题目，随便举一个考古题的例子，还算简单的
若以F(15)呼叫右侧F()函式，总共会印出几行数字？
void F(int n) { printf(&amp;quot;%d\n&amp;quot;,n); if(n%2==1)&amp;amp;&amp;amp;(n&amp;gt;1) { return F(5*n+1) } else { if(n%2==0) return F(n/2); } } 解题思路：
当函式输进一个变数n,此时分为两种状况
   条件 动作     n为偶数 回传F(n/2)   n不为偶数 回传F(5*n+1)    这时候n的变化如下
   印出次数 此时的n值     01 15   02 76   03 38   04 19   05 96   06 48   07 24   08 12   09 06   10 03   11 16   12 08   13 04   14 02   15 01    Answer == 15</description>
    </item>
    
    <item>
      <title>Blog 的起源</title>
      <link>https://calvinwan0101.github.io/cn/blog/orgin/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://calvinwan0101.github.io/cn/blog/orgin/</guid>
      <description>Calvin Blog 的起源 前几天不知道GitHub如果作为个人申请备审资料应该怎麽分类的我游走在ptt的SeniorHigh版中
无意中看到一个清大资工备取的备审 点这里
晚上拿去就和猫猫大神分享了
她觉得做得不够好但是她有提说如果那个人如果把他备审的东西建一个blog丢进去应该会很厉害
一瞬间觉得天啊猫猫大神是天才吧，平常看起来什麽都不会的她竟然有办法提出这麽U质的点子
于是抱持着 做备审的心态 开始了我的Blog建置
但是猫猫大神觉得只是为了给教授看而经营blog很废，我也这样觉得
刚好我是个小剧场很多的人，然后7月考完APCS我就要去重考班待着了
可能可以写一些在重考班的所见所闻啊或是读书心得之类的
GitHub 可能拿来放一些比较正式的东西
Blog 就拿来分享生活，记录一些有趣的事或是心得分享
总之这就是Calvin Blog 的起源了</description>
    </item>
    
  </channel>
</rss>